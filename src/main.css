@import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

* {
  margin: 0;
  padding: 0;
}

html {
  height: 100svh;
  width: 100vw;
  overflow: hidden;
}

body {
  height: 100%;
  width: 100%;
  overflow: hidden;
  background: #0a0a0a;
  color: #fafafa;
  display: grid;
  grid-template-columns: 1fr calc(var(--grid-size) * 6) 1fr;
  grid-template-rows: 1fr calc(var(--grid-size) * 4) 1fr;
  font-family: "Inter", sans-serif;

  --grid-size: round(min(16.667vw, 160px), 1px);
}

main {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
}

/* Rectangle with 3/2 aspect ratio which contains another
 * rectangle with the size of 85.60mm x 53.98mm (ISO 7810) with equal
 * horizontal and vertical spacing has the size of 94.86mm x 63.24mm. */
.card,
.card-shadow,
.card-reflection {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  justify-self: center;
  align-self: center;
  height: 85.357%; /* 53.98mm / 63.24mm */
  width: 90.238%; /* 85.60mm / 94.86mm */
  border-radius: 3.505% / 5.558%; /* (3mm / 85.60mm) / (3mm / 53.98mm) */
  animation-duration: 1000ms;
  animation-timing-function: cubic-bezier(0.25, 1, 0.5, 1);
  animation-fill-mode: forwards;
  backface-visibility: hidden;
}

.card {
  z-index: 10;
  background: #171717;
  border: 1px solid #262626;
  container-type: size;
  animation-name: card;
}

.card-reflection {
  pointer-events: none;
  z-index: 20;
  background-size: 100% 300%;
  animation-name: card, card-reflection;
  background-image: linear-gradient(
    #00000080 33%,
    #ffffff 50%,
    #ffffff20 55%,
    transparent 66%
  );
}

@keyframes card {
  from {
    transform: scale3d(1.4, 1.4, 1) rotate3d(0.5, 0, 0.5, 90deg);
  }
  to {
    transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 0deg);
  }
}

@keyframes card-reflection {
  from {
    background-position: left top;
  }
  to {
    background-position: left bottom;
  }
}

@keyframes card-shadow {
  from {
    box-shadow: 0 calc(var(--grid-size) * 3) calc(var(--grid-size) * 3)
      #00000000;
  }
  to {
    box-shadow: 0 calc(var(--grid-size) * 0.5) calc(var(--grid-size) * 0.5)
      #00000080;
  }
}

.card-shadow {
  animation-name: card-shadow;
}

@media (min-width: 800px) {
  body {
    grid-template-columns: 1fr calc(var(--grid-size) * 3) 1fr;
    grid-template-rows: 1fr calc(var(--grid-size) * 2) 1fr;
  }
}

h1 {
  margin-top: 13cqh;
  margin-left: 13cqh;
  margin-bottom: 8cqh;
  font-size: 10cqh;
  font-weight: 700;
}

p {
  margin-left: 13cqh;
  font-size: 5cqh;
}

.grid-column-left,
.grid-column-middle,
.grid-column-right,
.grid-row-top,
.grid-row-middle,
.grid-row-bottom {
  background-size: var(--grid-size) var(--grid-size);
  z-index: -1;
}

.grid-column-left {
  background-position: right;
  background-image: repeating-linear-gradient(
    to left,
    #1e1e1e 0 1px,
    transparent 1px 100%
  );
  grid-column: 1 / 2;
  grid-row: 1 / 4;
}

.grid-column-middle {
  background-position: left;
  margin-left: var(--grid-size);
  margin-right: 2px;
  background-image: repeating-linear-gradient(
    to right,
    #1e1e1e 0 1px,
    transparent 1px 100%
  );
  grid-column: 2 / 3;
  grid-row: 1 / 4;
}

.grid-column-right {
  background-position: left;
  background-image: repeating-linear-gradient(
    to right,
    #1e1e1e 0 1px,
    transparent 1px 100%
  );
  grid-column: 3 / 4;
  grid-row: 1 / 4;
}

.grid-row-top {
  background-position: bottom;
  background-image: repeating-linear-gradient(
    to top,
    #1e1e1e 0 1px,
    transparent 1px 100%
  );
  grid-column: 1 / 4;
  grid-row: 1 / 2;
}

.grid-row-middle {
  background-position: top;
  margin-top: var(--grid-size);
  margin-bottom: 2px;
  background-image: repeating-linear-gradient(
    to bottom,
    #1e1e1e 0 1px,
    transparent 1px 100%
  );
  grid-column: 1 / 4;
  grid-row: 2 / 3;
}

.grid-row-bottom {
  background-position: top;
  background-image: repeating-linear-gradient(
    to bottom,
    #1e1e1e 0 1px,
    transparent 1px 100%
  );
  grid-column: 1 / 4;
  grid-row: 3 / 4;
}

.grid {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--grid-size);
}

canvas {
  position: absolute;
  top: 0;
  left: 0;
}
